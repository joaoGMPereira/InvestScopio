//
//  LoginPresenter.swift
//  InvestScopio
//
//  Created by Joao Medeiros Pereira on 12/06/19.
//  Copyright (c) 2019 Joao Medeiros Pereira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol INVSResendPasswordPresenterProtocol {
    func presentToolbarAction(withPreviousTextField textField: INVSFloatingTextField, allTextFields textFields: [INVSFloatingTextField], typeOfAction type: INVSKeyboardToolbarButton)
    func presentSuccessResendPassword(withEmail email:String, title:String, message:String, shouldHideAutomatically:Bool, popupType:INVSPopupMessageType)
    func presentErrorResendPassword(titleError:String, messageError:String, shouldHideAutomatically:Bool, popupType:INVSPopupMessageType)
    
}

class INVSResendPasswordPresenter: INVSResendPasswordPresenterProtocol {
    weak var viewController: INVSResendPasswordViewControllerProtocol?
  
    func presentToolbarAction(withPreviousTextField textField: INVSFloatingTextField, allTextFields textFields: [INVSFloatingTextField], typeOfAction type: INVSKeyboardToolbarButton) {
        switch type {
        case .back:
            break
        case .cancel:
            viewController?.displayCancelAction()
        case .ok:
            let nextTextField = textField.typeTextField?.getNext(allTextFields: textFields)
            viewController?.displayOkAction(withTextField: nextTextField ?? textField, andShouldResign: nextTextField == nil)
        }
    }
    
    func presentSuccessResendPassword(withEmail email:String, title:String, message:String, shouldHideAutomatically:Bool, popupType:INVSPopupMessageType) {
        viewController?.displayResendPasswordSuccess(withEmail: email, title: title, message: message, shouldHideAutomatically: shouldHideAutomatically, popupType: popupType)
    }
    func presentErrorResendPassword(titleError:String, messageError:String, shouldHideAutomatically:Bool, popupType:INVSPopupMessageType) {
        viewController?.displayResendPasswordError(titleError: titleError, messageError: messageError, shouldHideAutomatically: shouldHideAutomatically, popupType: popupType)
        
    }
    
}
