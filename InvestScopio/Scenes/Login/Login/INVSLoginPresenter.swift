//
//  LoginPresenter.swift
//  InvestScopio
//
//  Created by Joao Medeiros Pereira on 12/06/19.
//  Copyright (c) 2019 Joao Medeiros Pereira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Firebase
protocol INVSLoginPresenterProtocol
{
  func presentToolbarAction(withPreviousTextField textField: INVSFloatingTextField, allTextFields textFields: [INVSFloatingTextField], typeOfAction type: INVSKeyboardToolbarButton)
    func presentSuccessSignIn(withEmail email: String, security: String)
    func presentSuccessSignInAsAdmin(withEmail email: String, security: String)
    func presentErrorSignIn(titleError:String, messageError:String, shouldHideAutomatically:Bool, popupType:INVSPopupMessageType)
}

class INVSLoginPresenter: INVSLoginPresenterProtocol
{
    weak var viewController: INVSLoginViewControllerProtocol?
  
    func presentToolbarAction(withPreviousTextField textField: INVSFloatingTextField, allTextFields textFields: [INVSFloatingTextField], typeOfAction type: INVSKeyboardToolbarButton) {
        switch type {
        case .back:
            break
        case .cancel:
            viewController?.displayCancelAction()
        case .ok:
            let nextTextField = textField.typeTextField?.getNext(allTextFields: textFields)
            viewController?.displayOkAction(withTextField: nextTextField ?? textField, andShouldResign: nextTextField == nil)
        }
    }
    
    func presentSuccessSignIn(withEmail email: String, security: String) {
        viewController?.displaySignInSuccess(withEmail: email, security: security)
    }
    
    func presentSuccessSignInAsAdmin(withEmail email: String, security: String) {
        viewController?.displaySignInAsAdminSuccess(withEmail: email, security: security)
    }
    
    func presentErrorSignIn(titleError:String, messageError:String, shouldHideAutomatically:Bool, popupType:INVSPopupMessageType) {
        viewController?.displaySignInError(titleError: titleError, messageError: messageError, shouldHideAutomatically: shouldHideAutomatically, popupType: popupType)
        
    }
    
}
